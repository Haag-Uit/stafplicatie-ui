// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { ListCampyearsData, ListCampyearsResponses, ListCampyearsErrors, CreateCampyearData, CreateCampyearResponses, CreateCampyearErrors, DeleteCampyearData, DeleteCampyearResponses, DeleteCampyearErrors, GetCampyearData, GetCampyearResponses, GetCampyearErrors, UpdateCampyearData, UpdateCampyearResponses, UpdateCampyearErrors, ActivateCampyearData, ActivateCampyearResponses, ActivateCampyearErrors, CloseCampyearData, CloseCampyearResponses, CloseCampyearErrors, OpenCampyearData, OpenCampyearResponses, OpenCampyearErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List all campyears
 * Retrieve a list of all campyears in the system
 */
export const listCampyears = <ThrowOnError extends boolean = false>(options?: Options<ListCampyearsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListCampyearsResponses, ListCampyearsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/',
        ...options
    });
};

/**
 * Create a new campyear
 * Create a new campyear with the provided information
 */
export const createCampyear = <ThrowOnError extends boolean = false>(options: Options<CreateCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateCampyearResponses, CreateCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete a campyear
 * Delete a campyear by its year
 */
export const deleteCampyear = <ThrowOnError extends boolean = false>(options: Options<DeleteCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCampyearResponses, DeleteCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}',
        ...options
    });
};

/**
 * Get a campyear by year
 * Retrieve a campyear's details by its year
 */
export const getCampyear = <ThrowOnError extends boolean = false>(options: Options<GetCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCampyearResponses, GetCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}',
        ...options
    });
};

/**
 * Update a campyear
 * Update a campyear's information by its year
 */
export const updateCampyear = <ThrowOnError extends boolean = false>(options: Options<UpdateCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateCampyearResponses, UpdateCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Activate a specific campyear
 * Marks a campyear as active by its year.
 */
export const activateCampyear = <ThrowOnError extends boolean = false>(options: Options<ActivateCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ActivateCampyearResponses, ActivateCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}/activate',
        ...options
    });
};

/**
 * Close a specific campyear
 * Marks a campyear as closed by its year.
 */
export const closeCampyear = <ThrowOnError extends boolean = false>(options: Options<CloseCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CloseCampyearResponses, CloseCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}/close',
        ...options
    });
};

/**
 * Open a specific campyear
 * Marks a campyear as open by its year.
 */
export const openCampyear = <ThrowOnError extends boolean = false>(options: Options<OpenCampyearData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<OpenCampyearResponses, OpenCampyearErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/{year}/open',
        ...options
    });
};