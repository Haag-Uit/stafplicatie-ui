// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-fetch';
import type { ListUsersData, ListUsersError, ListUsersResponse, CreateUserData, CreateUserError, CreateUserResponse, GetUserData, GetUserError, GetUserResponse, UpdateUserData, UpdateUserError, UpdateUserResponse, DeleteUserData, DeleteUserError, DeleteUserResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * List users
 * List Auth0 users with pagination
 */
export const listUsers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<ListUsersData, ThrowOnError>) => {
    return (options?.client ?? client).get<ListUsersResponse, ListUsersError, ThrowOnError>({
        ...options,
        url: '/api/v1/'
    });
};

/**
 * Create user
 * Create a new Auth0 user
 */
export const createUser = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateUserData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserResponse, CreateUserError, ThrowOnError>({
        ...options,
        url: '/api/v1/'
    });
};

/**
 * Get user
 * Get a user by ID
 */
export const getUser = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetUserData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserResponse, GetUserError, ThrowOnError>({
        ...options,
        url: '/api/v1/{id}'
    });
};

/**
 * Update user
 * Update an existing Auth0 user
 */
export const updateUser = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UpdateUserData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateUserResponse, UpdateUserError, ThrowOnError>({
        ...options,
        url: '/api/v1/{id}'
    });
};

/**
 * Delete user
 * Delete a user by ID
 */
export const deleteUser = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteUserData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteUserResponse, DeleteUserError, ThrowOnError>({
        ...options,
        url: '/api/v1/{id}'
    });
};