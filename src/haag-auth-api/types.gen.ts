// This file is auto-generated by @hey-api/openapi-ts

export type MainApiError = {
    code: string;
    description: string;
    fields?: {
        [key: string]: string;
    };
    message: string;
    meta?: {
        [key: string]: string;
    };
};

export type MainRequestCreateUser = {
    email: string;
    nickname?: string;
    password?: string;
    user_metadata?: {
        [key: string]: unknown;
    };
};

export type MainResponseUser = {
    email?: string;
    id?: string;
    nickname?: string;
    user_metadata?: {
        [key: string]: unknown;
    };
};

export type ListUsersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page number
         */
        page?: number;
        /**
         * Users per page
         */
        per_page?: number;
    };
    url: '/api/v1/';
};

export type ListUsersErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type ListUsersError = ListUsersErrors[keyof ListUsersErrors];

export type ListUsersResponses = {
    /**
     * OK
     */
    200: Array<MainResponseUser>;
};

export type ListUsersResponse = ListUsersResponses[keyof ListUsersResponses];

export type CreateUserData = {
    /**
     * User to create
     */
    body: MainRequestCreateUser;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type CreateUserErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Validation error
     */
    422: MainApiError;
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
    /**
     * Created
     */
    201: MainResponseUser;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type DeleteUserData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type DeleteUserErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type DeleteUserError = DeleteUserErrors[keyof DeleteUserErrors];

export type DeleteUserResponses = {
    /**
     * No Content
     */
    204: unknown;
};

export type GetUserData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type GetUserErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
    /**
     * OK
     */
    200: MainResponseUser;
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type UpdateUserData = {
    /**
     * User to update
     */
    body: MainRequestCreateUser;
    path: {
        /**
         * User ID
         */
        id: string;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type UpdateUserErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type UpdateUserError = UpdateUserErrors[keyof UpdateUserErrors];

export type UpdateUserResponses = {
    /**
     * OK
     */
    200: MainResponseUser;
};

export type UpdateUserResponse = UpdateUserResponses[keyof UpdateUserResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8081' | (string & {});
};