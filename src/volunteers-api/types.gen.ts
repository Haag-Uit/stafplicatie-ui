// This file is auto-generated by @hey-api/openapi-ts

export type PersonRestError = {
    code: string;
    description: string;
    fields?: {
        [key: string]: string;
    };
    message: string;
    meta?: {
        [key: string]: string;
    };
};

export type VolunteersCreateVolunteerRequest = {
    driversLicense: 'Geen' | 'B' | 'BE';
    experience?: string;
    firstAid: 'Geen' | 'EHBO' | 'BHV';
    firstChoices: Array<string>;
    motivation?: string;
    personId: number;
    properties?: string;
    secondChoices: Array<string>;
    study: 'hbo-ict' | 'cmd' | 'ads-ai';
};

export type VolunteersCreateVolunteerResponse = {
    volunteer?: VolunteersVolunteerResponse;
};

export type VolunteersGetVolunteerResponse = {
    volunteer?: VolunteersVolunteerResponse;
};

export type VolunteersListVolunteersResponse = {
    count?: number;
    volunteers?: Array<VolunteersVolunteerResponse>;
};

export type VolunteersUpdateVolunteerRequest = {
    driversLicense: 'Geen' | 'B' | 'BE';
    experience?: string;
    firstAid: 'Geen' | 'EHBO' | 'BHV';
    firstChoices: Array<string>;
    motivation?: string;
    properties?: string;
    secondChoices: Array<string>;
    study: 'hbo-ict' | 'cmd' | 'ads-ai';
};

export type VolunteersUpdateVolunteerResponse = {
    volunteer?: VolunteersVolunteerResponse;
};

export type VolunteersVolunteerResponse = {
    campyearYear: number;
    driversLicense: 'Geen' | 'B' | 'BE';
    experience: string;
    firstAid: 'Geen' | 'EHBO' | 'BHV';
    firstChoices: Array<string>;
    id: number;
    motivation: string;
    personId: number;
    properties: string;
    secondChoices: Array<string>;
    study: 'hbo-ict' | 'cmd' | 'ads-ai';
};

export type ListVolunteersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type ListVolunteersErrors = {
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type ListVolunteersError = ListVolunteersErrors[keyof ListVolunteersErrors];

export type ListVolunteersResponses = {
    /**
     * List of volunteers retrieved successfully
     */
    200: VolunteersListVolunteersResponse;
};

export type ListVolunteersResponse = ListVolunteersResponses[keyof ListVolunteersResponses];

export type CreateVolunteerData = {
    /**
     * Volunteer data
     */
    body: VolunteersCreateVolunteerRequest;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type CreateVolunteerErrors = {
    /**
     * Bad request - invalid JSON or date format
     */
    400: PersonRestError;
    /**
     * Validation error - invalid field values
     */
    422: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type CreateVolunteerError = CreateVolunteerErrors[keyof CreateVolunteerErrors];

export type CreateVolunteerResponses = {
    /**
     * Volunteer created successfully
     */
    201: VolunteersCreateVolunteerResponse;
};

export type CreateVolunteerResponse = CreateVolunteerResponses[keyof CreateVolunteerResponses];

export type GetVolunteerByPersonData = {
    body?: never;
    path: {
        /**
         * Volunteer's person ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/person/{id}';
};

export type GetVolunteerByPersonErrors = {
    /**
     * Bad request - email parameter is required
     */
    400: PersonRestError;
    /**
     * Volunteer not found
     */
    404: PersonRestError;
};

export type GetVolunteerByPersonError = GetVolunteerByPersonErrors[keyof GetVolunteerByPersonErrors];

export type GetVolunteerByPersonResponses = {
    /**
     * Volunteer details retrieved successfully
     */
    200: VolunteersGetVolunteerResponse;
};

export type GetVolunteerByPersonResponse = GetVolunteerByPersonResponses[keyof GetVolunteerByPersonResponses];

export type DeleteVolunteerData = {
    body?: never;
    path: {
        /**
         * Volunteer ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type DeleteVolunteerErrors = {
    /**
     * Bad request - invalid ID format
     */
    400: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type DeleteVolunteerError = DeleteVolunteerErrors[keyof DeleteVolunteerErrors];

export type DeleteVolunteerResponses = {
    /**
     * Volunteer deleted successfully
     */
    204: unknown;
};

export type GetVolunteerData = {
    body?: never;
    path: {
        /**
         * Volunteer ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type GetVolunteerErrors = {
    /**
     * Bad request - invalid ID format
     */
    400: PersonRestError;
    /**
     * Volunteer not found
     */
    404: PersonRestError;
};

export type GetVolunteerError = GetVolunteerErrors[keyof GetVolunteerErrors];

export type GetVolunteerResponses = {
    /**
     * Volunteer details retrieved successfully
     */
    200: VolunteersGetVolunteerResponse;
};

export type GetVolunteerResponse = GetVolunteerResponses[keyof GetVolunteerResponses];

export type UpdateVolunteerData = {
    /**
     * Updated volunteer data
     */
    body: VolunteersUpdateVolunteerRequest;
    path: {
        /**
         * Volunteer ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type UpdateVolunteerErrors = {
    /**
     * Bad request - invalid ID or date format
     */
    400: PersonRestError;
    /**
     * Validation error - invalid field values
     */
    422: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type UpdateVolunteerError = UpdateVolunteerErrors[keyof UpdateVolunteerErrors];

export type UpdateVolunteerResponses = {
    /**
     * Volunteer updated successfully
     */
    200: VolunteersUpdateVolunteerResponse;
};

export type UpdateVolunteerResponse = UpdateVolunteerResponses[keyof UpdateVolunteerResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8083' | (string & {});
};