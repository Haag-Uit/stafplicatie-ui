// This file is auto-generated by @hey-api/openapi-ts

export type PersonCreatePersonResponse = {
    person?: PersonPersonResponse;
};

export type PersonGetPersonResponse = {
    person?: PersonPersonResponse;
};

export type PersonListPersonsResponse = {
    count?: number;
    persons?: Array<PersonPersonResponse>;
};

export type PersonPersonRequest = {
    address: string;
    city: string;
    dateOfBirth: string;
    email: string;
    emergencyContact: string;
    firstName: string;
    gender: 'm' | 'v' | 'nb';
    lastName: string;
    phone: string;
    zipCode: string;
};

export type PersonPersonResponse = {
    address: string;
    city: string;
    createdAt: string;
    dateOfBirth: string;
    email: string;
    emergencyContact: string;
    firstName: string;
    gender: 'm' | 'v' | 'nb';
    id: number;
    lastName: string;
    phone: string;
    updatedAt: string;
    zipCode: string;
};

export type PersonPersonSearchResult = {
    email?: string;
    id?: number;
};

export type PersonRestError = {
    code: string;
    description: string;
    fields?: {
        [key: string]: string;
    };
    message: string;
    meta?: {
        [key: string]: string;
    };
};

export type PersonSearchPersonsRequest = {
    email: string;
};

export type PersonSearchPersonsResponse = {
    count?: number;
    results?: Array<PersonPersonSearchResult>;
};

export type PersonUpdatePersonResponse = {
    person?: PersonPersonResponse;
};

export type ListPersonsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type ListPersonsErrors = {
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type ListPersonsError = ListPersonsErrors[keyof ListPersonsErrors];

export type ListPersonsResponses = {
    /**
     * List of persons retrieved successfully
     */
    200: PersonListPersonsResponse;
};

export type ListPersonsResponse = ListPersonsResponses[keyof ListPersonsResponses];

export type CreatePersonData = {
    /**
     * Person data
     */
    body: PersonPersonRequest;
    path?: never;
    query?: never;
    url: '/api/v1/';
};

export type CreatePersonErrors = {
    /**
     * Bad request - invalid JSON or date format
     */
    400: PersonRestError;
    /**
     * Validation error - invalid field values
     */
    422: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type CreatePersonError = CreatePersonErrors[keyof CreatePersonErrors];

export type CreatePersonResponses = {
    /**
     * Person created successfully
     */
    201: PersonCreatePersonResponse;
};

export type CreatePersonResponse = CreatePersonResponses[keyof CreatePersonResponses];

export type GetPersonByEmailData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Person email address
         */
        email: string;
    };
    url: '/api/v1/email';
};

export type GetPersonByEmailErrors = {
    /**
     * Bad request - email parameter is required
     */
    400: PersonRestError;
    /**
     * Person not found
     */
    404: PersonRestError;
};

export type GetPersonByEmailError = GetPersonByEmailErrors[keyof GetPersonByEmailErrors];

export type GetPersonByEmailResponses = {
    /**
     * Person details retrieved successfully
     */
    200: PersonGetPersonResponse;
};

export type GetPersonByEmailResponse = GetPersonByEmailResponses[keyof GetPersonByEmailResponses];

export type SearchPersonsData = {
    /**
     * Search criteria
     */
    body: PersonSearchPersonsRequest;
    path?: never;
    query?: never;
    url: '/api/v1/search';
};

export type SearchPersonsErrors = {
    /**
     * Bad request - invalid JSON
     */
    400: PersonRestError;
    /**
     * Validation error - invalid field values
     */
    422: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type SearchPersonsError = SearchPersonsErrors[keyof SearchPersonsErrors];

export type SearchPersonsResponses = {
    /**
     * Search results retrieved successfully
     */
    200: PersonSearchPersonsResponse;
};

export type SearchPersonsResponse = SearchPersonsResponses[keyof SearchPersonsResponses];

export type DeletePersonData = {
    body?: never;
    path: {
        /**
         * Person ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type DeletePersonErrors = {
    /**
     * Bad request - invalid ID format
     */
    400: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type DeletePersonError = DeletePersonErrors[keyof DeletePersonErrors];

export type DeletePersonResponses = {
    /**
     * Person deleted successfully
     */
    204: unknown;
};

export type GetPersonData = {
    body?: never;
    path: {
        /**
         * Person ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type GetPersonErrors = {
    /**
     * Bad request - invalid ID format
     */
    400: PersonRestError;
    /**
     * Person not found
     */
    404: PersonRestError;
};

export type GetPersonError = GetPersonErrors[keyof GetPersonErrors];

export type GetPersonResponses = {
    /**
     * Person details retrieved successfully
     */
    200: PersonGetPersonResponse;
};

export type GetPersonResponse = GetPersonResponses[keyof GetPersonResponses];

export type UpdatePersonData = {
    /**
     * Updated person data
     */
    body: PersonPersonRequest;
    path: {
        /**
         * Person ID
         */
        id: number;
    };
    query?: never;
    url: '/api/v1/{id}';
};

export type UpdatePersonErrors = {
    /**
     * Bad request - invalid ID or date format
     */
    400: PersonRestError;
    /**
     * Validation error - invalid field values
     */
    422: PersonRestError;
    /**
     * Internal server error
     */
    500: PersonRestError;
};

export type UpdatePersonError = UpdatePersonErrors[keyof UpdatePersonErrors];

export type UpdatePersonResponses = {
    /**
     * Person updated successfully
     */
    200: PersonUpdatePersonResponse;
};

export type UpdatePersonResponse = UpdatePersonResponses[keyof UpdatePersonResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8082' | (string & {});
};